openapi: 3.0.0
info:
  title: Products API
  version: '1.0'
  description: Products API for RS School AWS Cloud developer course 2025

paths:
  /products:
    get:
      summary: Get products list
      operationId: getProductsList
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '500':
          description: Internal server error
    post:
      summary: Create a new product
      operationId: createProduct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - description
                - price
                - count
              properties:
                title:
                  type: string
                  description: The name/title of the product
                description:
                  type: string
                  description: Detailed description of the product
                price:
                  type: number
                  format: float
                  description: The price of the product
                count:
                  type: integer
                  format: int32
                  description: The quantity of the product in stock
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Bad request - Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message describing the validation failure
        '500':
          description: Internal server error

  /products/{productId}:
    get:
      summary: Get product by ID
      operationId: getProductById
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
          description: ID of the product to retrieve
      responses:
        '200':
          description: Retrieved product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Bad request - missing productId
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
        '500':
          description: Internal server error

components:
  schemas:
    Product:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          description: The unique identifier for the product
        title:
          type: string
          description: The name/title of the product
        description:
          type: string
          description: Detailed description of the product
        price:
          type: number
          format: float
          description: The price of the product
        stock:
          type: integer
          format: int32
          description: The quantity of the product in stock

servers:
  - url: https://56eedk1s6e.execute-api.us-east-1.amazonaws.com/
    description: Base API URL
